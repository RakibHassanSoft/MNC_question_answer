#include <bits/stdc++.h> 

int flipBits(int* arr, int n) {
    
    int originalOnes = 0;
    int maxSum = 0, currentSum = 0;

    for (int i = 0; i < n; i++) {
        if (arr[i] == 1) {
            originalOnes++;
            arr[i] = -1; // Flipping 1 reduces count
        } else   arr[i] = 1; // Flipping 0 increases count
        
    }

    // Apply Kadane's algorithm to find the max subarray sum
    for (int i = 0; i < n; i++) {
        currentSum = max(arr[i], currentSum + arr[i]);
        maxSum = max(maxSum, currentSum);
    }

    // Edge case: If the array has all 1's, flipping decreases the count
    if (originalOnes == n)     return n;
    

    return originalOnes + maxSum;
}
