#include <bits/stdc++.h> 
// Function to insert an element into the sorted stack
void insertSorted(stack<int> &stack, int element) {
    // Base case: If stack is empty or the element is larger than the top of the stack
    if (stack.empty() || stack.top() <= element) {
        stack.push(element);
        return;
    }

    // Otherwise, pop the top element and recursively insert the element
    int topElement = stack.top();
    stack.pop();
    insertSorted(stack, element);

    // Push the popped element back to the stack
    stack.push(topElement);
}

// Function to sort the stack
void sortStack(stack<int> &stack) {
    // Base case: If the stack is empty, return
    if (stack.empty()) {
        return;
    }

    // Pop the top element
    int topElement = stack.top();
    stack.pop();

    // Recursively sort the remaining stack
    sortStack(stack);

    // Insert the popped element into the sorted stack
    insertSorted(stack, topElement);
}
